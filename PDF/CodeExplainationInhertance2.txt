
class bankAccount
{

public bankAccount(int input, string name)
{
}

 private void showBalance()
 {
 }

}

class SavingAccount : bankAccount
{
  int maxLimit;

  public SavingAccount ( int max, string x , int y) : base(y,x)
  {
     maxlimit= max;
     base.showBalance();
      
   }

}

Public static void main()
{
SavingAccount z = new SavingAccount (87, "karim",15 );
}



------------------------------------------------------------------------


class bankAccount                                      
{
 int balance = 20;
 public void showBalance()
 {
    Console.writeline( balance );
 }

}

class SavingAccount : bankAccount
{
  int maxlimit =15;
 public new void showBalance()
 {
    Console.writeline("this is derived class and balance = " + balance );
 }

}

bankAccount x = new bankAccount();           x.balance=19;   x.showBalance(); \\19
SavingAccount y = new SavingAccount();       y.balance=40;   y.maxlimit=30;  y.showBalance(); \\this is derived class and balance = 40
  



------------------------------------------------------------------------------------
class bankAccount    \\ can inherit and can instantiate
{
}


sealed class bankAccount  \\ can instantiate but cannot inherit
{
}


abstract class bankAccount \\ can inherit but cannot instantiate 
{
  string accountHolder;
  int accountNumber;
  double balance;

  public abstract void Deposit(double amount);

  public double withdraw (double amount) {}
  public double getBalance() {}
}


class SavingAccount : bankAccount 
{

public override void Deposit(double amount)
{

}

}


class CurrentAccount: bankAccount 
{
  int maxLimit;

}


SavingAccount x = new SavingAccount();
x.accountHolder;
x.accountNumber;
x.balance;

CurrentAccount y = new CurrentAccount();
y.accountHolder;
y.accountNumber;
y.balance;
y.maxLimit;






















